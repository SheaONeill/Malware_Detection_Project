find_files_directory () {
    echo "in find_files_directory function now"
    #get the hash values from directory/s
    #find /root/Desktop/Malware-Project-AS02/ -name "*" -type f -executable | md5sum * | cut -d' ' -f1 > /root/Desktop/Malware-Project-AS02/newtest-hashes-found
#to do store paths in variables as locations may change
find /root/Desktop/Malware-Project-AS02/ -name "*" -type f -executable | md5sum * > /root/Desktop/Malware-Project-AS02/newtest-hashes-found
    #check to see if hashes from malware hashes match found hashes
    echo "displaying calculated hashes from directory results: newtest-hashes-found"
    cat /root/Desktop/Malware-Project-AS02/newtest-hashes-found
    echo -e "\n"
    echo "testing hashes now"
    echo -e "\n"
    #grep -Fwf "/root/Desktop/Malware-Project-AS02/newtest-hashes-found" "/root/Desktop/Malware-Project-AS02/test_hashses.txt"
     
    echo "testing new test for results! newtest-hashes-found-stripped"
    echo  "$result" | grep --color -Fwf "/root/Desktop/Malware-Project-AS02/newtest-hashes-found" | cut -d' ' -f1 "/root/Desktop/Malware-Project-AS02/newtest-hashes-found" > newtest-hashes-found-stripped
cat newtest-hashes-found-stripped
    echo -e "\n"
echo -e "\nDone!"
#echo newline-test "$result" | tr ' ' '\n'

    
    echo "testing a test variable"
    test=$(grep --color -Fwf "/root/Desktop/Malware-Project-AS02/newtest-hashes-found-stripped" <<< $result)
    #check to see if variable is empty
    if [ ! -z  "$test"  ] ; 
       then echo "Not Empty"; 
       word_count=$(wc -w <<< $test) 
       echo -n "Total Virus's found: "; 
       echo -e $((word_count / 5))
       #do the mathsey stuff       
         for ((i=1 ; i<=$((word_count / 5)) ; i++))
         do
         echo "$i"
         #todo use awk or sed to grab the values at position 2 and 3 and 4
         # name md5 etc..
         #the loop may not be the right option here
         #maybe word count /5 number of rows to display this will involve inserting newlines after each row
         awk -F" " '{ print $($i),$($i+1) } ' <<< $test
         done   
       else "Not found in database!"

       fi 
    echo $test > /root/Desktop/Malware-Project-AS02/results_from_test.txt
    echo "test variable value: "${test}
    
    echo -e "\nvalue of tset variable stored in results_from_test.txt:"
    cat /root/Desktop/Malware-Project-AS02/results_from_test.txt
    echo -e "\n"
    #if ${test} #was trying to see if value was true for testing no joy as yet
    if (grep --color -Fwf "/root/Desktop/Malware-Project-AS02/newtest-hashes-found-stripped" <<< $result) #this is working now
      #to do show the matchin file name path of dodgey file
      
      then echo "This is known malware found in our database"    
      echo "testing hashes done! heading home now"
    else
    # echo if not found
    echo -e "Not found in database presumed safe (dont take my word for that tho)"
fi
}
