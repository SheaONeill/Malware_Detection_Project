#!/bin/bash

#this function reads from the database and compares results
#to arguments passed in 
read_database_function () {

#check arguments
if [ ! -n "$1" ]
    then
        echo "Usage: $(basename $0) md5 table1 table2 etc.. see read_hash_log_function"
        exit 85
fi


#echo -e "\nIn read_database_function from script: $0\n"
#
if [[ "$4" == "ssdeep" ]];then
    echo -e "\nFinish this Shea"
    query_string="select $4 from $2 UNION select $4 from $3"
    
    else
            which_value="*"
            query_string="select $which_value from $2 UNION select $which_value from $3"
            #IFS is internal field separator \t tab
            while IFS=$'\t' read id name md5 type released
            do
                #check if argument 1 matches md5 from database !good ye?
                if [[ "$1" == "$md5" && "$type" != "benign" ]]; then  
                   
                    echo -e "$1 matches $name in $2" >> ${LOG_DIR}/found_malware.txt
                    #save deatails of matched row from database
                    echo -e "ID: $id \nName: $name \nMD5: $md5 \nType: $type \nRelease Date: $released" >> ${LOG_DIR}/found_malware.txt
                    echo -e "$md5" >> ${LOG_DIR}/found_malware_hashes.txt     
                fi
                
                #check if argument 1 matches md5 from database
                if [[ "$1" == "$md5" && "$type" == "benign" ]]; then  
                    
                    echo "$1 matches $name in $3" >> ${LOG_DIR}/benign.txt
                    #save deatails of matched row from database
                    echo -e "ID: $id \nName: $name \nMD5: $md5 \nType: $type \nRelease Date: $released" >> ${LOG_DIR}/benign.txt
                    echo -e "$md5" >> ${LOG_DIR}/benign_hashes.txt
                      
                 fi
                 
            done < <(mysql -h $host -u $name -p$pass $dbname -s -e "$query_string;") 
            
fi
} 

#setup_db_vars
setup_db_vars () {
    	#todo if user enters nothing use localhost as default
    	host='localhost'
    	dbname="malware_project"
    	name='root'
    	pass='root'   
	}
	
setup_db_vars	
read_database_function $1 $2 $3 $4
